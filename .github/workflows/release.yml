name: build-and-release

on:
  push:
    branches: [main]

permissions:
  contents: write # create release and upload assets
  id-token: write # npm provenance

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.ver.outputs.should_release }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect version change
        id: ver
        run: |
          PREV_SHA="${{ github.event.before }}"
          if git cat-file -e "$PREV_SHA^{commit}" 2>/dev/null; then
            git show "$PREV_SHA:package.json" > prev.json || echo '{}' > prev.json
          else
            echo '{}' > prev.json
          fi
          CUR=$(node -p "require('./package.json').version || ''") || CUR=""
          PREV=$(node -e "try{console.log(JSON.parse(require('fs').readFileSync('prev.json','utf8')).version||'')}catch(e){console.log('')}")
          if [ -n "$CUR" ] && [ "$CUR" != "$PREV" ]; then
            echo "should_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_release=false" >> "$GITHUB_OUTPUT"
          fi

  check:
    needs: prepare
    if: needs.prepare.outputs.should_release == 'true'
    uses: ./.github/workflows/check.yml

  release:
    needs: [prepare, check]
    if: needs.prepare.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts from check
        uses: actions/download-artifact@v4
        with:
          name: wasm-build
          path: dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/gs.js
            dist/gs.wasm

      - name: Setup Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm (with provenance)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run deploy
