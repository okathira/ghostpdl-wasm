name: build-and-release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write # create release and upload assets
  id-token: write # npm provenance

jobs:
  check:
    runs-on: ubuntu-latest
    container: emscripten/emsdk:4.0.13
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Build
        run: ./compile.sh

      - name: Verify outputs exist
        run: |
          test -f dist/gs.js
          test -f dist/gs.wasm

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: |
            dist/gs.js
            dist/gs.wasm

  release:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine release type
        id: release_meta
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [[ "$VERSION" == *-* ]]; then
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "prerelease=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Download artifacts from check
        uses: actions/download-artifact@v4
        with:
          name: wasm-build
          path: dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ steps.release_meta.outputs.prerelease == 'true' }}
          files: |
            dist/gs.js
            dist/gs.wasm

      - name: Setup Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm (with provenance)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PRERELEASE: ${{ steps.release_meta.outputs.prerelease }}
        run: |
          if [ "$PRERELEASE" = "true" ]; then
            npm run deploy:next
          else
            npm run deploy
          fi
